<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title><%= title %></title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <!-- Include Bootstrap -->
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
          integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!-- Include Bootstrap Table -->
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.1/bootstrap-table.min.css">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="/javascripts/bootstrap-table.min.js"></script>
    <script src="/javascripts/FileSaver.js"></script>
    <script lang="javascript" src="/javascripts/xlsx.full.min.js"></script>
    <script src="/javascripts/tableexport.js"></script>
</head>
<!-- Define styles for a nice candidates table -->
<style>
    #candidates {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    #candidates td, #candidates th {
        border: 1px solid #ddd;
        padding: 8px;
    }

    #candidates tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    #candidates tr:hover {
        background-color: #ddd;
    }

    #candidates th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: right /*FIXME:left*/;
    <% if (advanced) { %> background-color: palevioletred;
    <% }
    else { %> background-color: cornflowerblue;
    <% } %> color: white;
    }

</style>
<header>
    <div class="container col-md-12" style="text-align: center;">
        <img class="logo" style="height: 100px;padding-top:20px;" src="/images/EH_logo.png"/>
    </div>
</header>
<body dir="rtl"><!-- FIXME: ltr -->
<ul>
</ul>
<%
let answersOrder = {}, maxAnswer = 0, orderedAnswers = []; // Hold the correct answers order for all the iterations of the loop
if (answers) {
    // If we're in answers mode, we need to loop through all the candidates' answers first in order
    // to prepare the column headings with all the question IDs
    console.log("71: Answers mode");

    for (let i = 0; i < candidates.length; i++) { // Loop through candidates
        console.log("74: Answers mode: ", i);
        let candidate = candidates[i];
        formjson = candidate.form; // Get the answers
        if (candidate.formCompleted) { // Did this candidate complete the form?
            // Run through all the answers and sort them into the correct order
            for (let j = 0; j < formjson.length; j++) {
                if (formjson[j] && formjson[j].hasOwnProperty('id')) { // safety
                    const id = formjson[j].id;
                    let index;
                    if (answersOrder[id] !== undefined) {
                        // This answer was encountered before and therefore already has a numerical order
                        index = answersOrder[id];
                    }
                    else {
                        // This answer is encountered for the first time so we need to assign it a numerical order
                        index = maxAnswer;
                        answersOrder[id] = index;
                        maxAnswer++;
                    }
                    orderedAnswers[index] = id;
                }
            }
        }
    }
}
%>
<table id="candidates"
       data-sort-name="dateCompleted"
       data-sort-order="desc"
       style="width:100%">
    <thead>
    <tr>
        <% if (answers) { %>
        <% console.log("108: Answers mode"); %>
        <th data-field="name" data-sortable="true" data-sorter="textSorter"><!--FIXME: Name-->שם מועמד</th>
        <%
            // Add all the columns for <qid>
        for (let j = 0;j < maxAnswer; j++) { %>
        <th data-field="<%= orderedAnswers[j] %>" data-sortable="true"
            data-sorter="textSorter"><%= orderedAnswers[j] %></th>
        <% }
            // Add all the columns for <qid>_time
        for (let j = 0;j < maxAnswer; j++) { %>
        <th data-field="<%= orderedAnswers[j] %>_time" data-sortable="true"
            data-sorter="textSorter"><%= orderedAnswers[j] %>_time
        </th>
        <% } %>
        <% console.log("117: Answers mode"); %>
        <% }
        else { %>
        <th data-field="date" data-sortable="true" data-sorter="dateSorter" style="text-align: right">
            <!--FIXME: Date Added-->תאריך <br>קבלת קוח
        </th>
        <th data-field="recSource" data-sortable="true" data-sorter="textSorter"><!--FIXME: Name-->מקור גיוס</th>
        <th data-field="name" data-sortable="true" data-sorter="textSorter"><!--FIXME: Name-->שם מועמד</th>
        <th data-field="phone"><!--FIXME: Phone-->טלפון</th>
        <th data-field="department"><!--FIXME: Phone-->מחלקה</th>
        <th data-field="team"><!--FIXME: Phone-->צוות</th>
        <th data-field="cvScreenDate"><!--FIXME: Phone-->תאריך<br>סינון קו"ח</th>
        <th data-field="cvScreenResult"><!--FIXME: Phone-->סינון<br>עפ"י קו"ח</th>
        <th data-field="id"><!--FIXME: Phone-->ת.ז.</th>
        <th data-field="dateCompleted" data-sortable="true" data-sorter="dateSorter"><!--FIXME: Date Completed-->תאריך
            מילוי
        </th>
        <th data-field="cv"><!--FIXME: CV-->קו"ח</th>
        <th data-field="report"><!--FIXME: Report-->דוח</th>
        <th data-field="score" data-sortable="true" data-sorter="textSorter"><!--FIXME: Score-->ציון</th>
        </th>
        <% if (advanced) { %>
        <th data-field="experience" data-sortable="true" data-sorter="textSorter"><!--FIXME: Experience-->חווית משתמש
        <th data-field="duration" data-sortable="true" data-sorter="numSorter"><!--FIXME: Duration-->זמן מילוי</th>
        <th data-field="formLink" data-sortable="false"><!--FIXME: Form -->שאלון</th>
        <th data-field="gooLink" data-sortable="false"><!--FIXME: goo.gl -->goo.gl</th>
        <% } %>
        <th data-field="phoneInterviewDate">תאריך <br>ראיון טלפוני</th>
        <th data-field="phoneInterviewResult">ראיון טלפוני</th>
        <th data-field="interviewDate">תאריך <br>ראיון פרונטלי</th>
        <th data-field="interviewResult">ראיון פרונטלי</th>
        <th data-field="auditDate">תאריך מבדק + ראיון</th>
        <th data-field="auditResult">מבדק אמינות</th>
        <th data-field="hrResult">ראיון מש"א</th>
        <th data-field="refCallDate">תאריך<br>שיחת ממליצים</th>
        <th data-field="refCallResult">שיחת ממליצים</th>
        <th data-field="contractDate">תאריך<br>חתימת חוזה</th>
        <th data-field="reportRating">השוואה לדוח</th>
        <th data-field="hired">התקבל</th>
        <th data-field="workDate">תאריך <br>תחילת עבודה</th>
        <th data-field="processUpdate">עדכון תהליך<br>מועמד באיילון</th>
        <th data-field="startedWork">התחיל לעבוד</th>
        <th data-field="recruiterNotes">הערות</th>
        <% if (advanced) { %>
        <th data-field="ehNotes">הערות<br>EH</th>
        <% } %>
        <% } %>
    </tr>
    </thead>
    <tbody>
    <% for (let i = 0; i < candidates.length; i++) {
        const candidate = candidates[i];
        formjson = candidate.form; // Get the answers
        /*let appExp = ''; // For holding the app experience response
        if (advanced) {
            for (let j = 0; j < formjson.length; j++) {
                if (formjson[j] && formjson[j].hasOwnProperty('type')) { // safety
                    if (formjson[j].type === 'A') { //is this an app exp type question?
                        if (formjson[j].hasOwnProperty('finalAnswer')) { // safety
                            appExp = formjson[j].finalAnswer; //save the final answer
                        }
                        break;
                    }
                }
            }
        }*/
        let appExp = candidate.appExp;
    } %>
    <%
    for (let i = 0; i < candidates.length; i++) { // Loop through candidates
        const candidate = candidates[i];
        formjson = candidate.form; // Get the answers
        /*let appExp = ''; // For holding the app experience response
        if (advanced) {
            // Run through all the answers and find the answer for the app experience
            for (let j = 0; j < formjson.length; j++) {
                if (formjson[j] && formjson[j].hasOwnProperty('type')) { // safety
                    if (formjson[j].type === 'A') { //is this an app exp type question?
                        if (formjson[j].hasOwnProperty('finalAnswer')) { // safety
                            appExp = formjson[j].finalAnswer; //save the final answer
                        }
                        break;
                    }
                }
            }
        }*/
        let appExp = candidate.appExp;
        if ((answers) && (candidate.formCompleted)) {
            // If we're in answers mode we only include in the table candidates who have completed the form
            console.log("185: Answers mode");
            // Clear the orderedAnswers so we don't mix them up with previous answers
            orderedAnswers = [];
            // Run through all the answers and sort them into the correct order
            for (let j = 0; j < formjson.length; j++) {
                if (formjson[j] && formjson[j].hasOwnProperty('id')) { // safety
                    const id = formjson[j].id;
                    const index = answersOrder[id];
                    let answer = '', timeToAnswer = '';
                    if (formjson[j].hasOwnProperty('finalAnswer')) { // safety
                        answer = formjson[j].finalAnswer;
                    }
                    if (formjson[j].hasOwnProperty('timeAnsweredInSeconds')) { // safety
                        timeToAnswer = formjson[j].timeAnsweredInSeconds;
                    }

                    console.log("201: ", id, "; ", answer, "; ", timeToAnswer);
                    orderedAnswers[index] = {
                        answer: answer,
                        timeToAnswer: timeToAnswer
                    };
                }
            }
        }
    %>
    <% if ((answers) && (candidate.formCompleted)) { %>
    <tr>
        <% console.log("212: Answers mode"); %>
        <td><%- candidate.fullName %></td>
        <%
            // Run through all the columns and add the answers first
        for (let j = 0;j < maxAnswer; j++) {
            if (!orderedAnswers[j]) {
                orderedAnswers[j] = {
                    answer: '',
                    timeToAnswer: ''
                };
            } %>
        <td><%= orderedAnswers[j].answer %></td>
        <% } %>
        <%
            // Run through all the columns and add the times
        for (let j = 0;j < maxAnswer; j++) { %>
        <td><%= orderedAnswers[j].timeToAnswer %></td>
        <% } %>
    </tr>
    <% }
    if (!answers) { %>
    <tr>
        <% const dateTimeCreated = candidate.dateTimeCreated; %>
        <% let dateTimeCompleted = candidate.dateTimeCompleted; if ((dateTimeCompleted === undefined) && (candidate.formCompleted)) dateTimeCompleted = new Date('11/14/17'); %>
        <% report = candidate.report; %>
        <td class="<%- (dateTimeCreated != undefined) ? 'dateValue' : '' %>"><%- (dateTimeCreated != undefined) ? dateTimeCreated.toISOString() : '' %></td>
        <td><%- candidate.recruitmentSource %></td>
        <td><%- candidate.fullName %></td>
        <td id="phoneNumber_<%= candidate.session.id %>"><%= candidate.phoneNumber %></td>
        <td id="department_<%= candidate.session.id %>" data-editor="5"><%= candidate.department %></td>
        <td id="team_<%= candidate.session.id %>" data-editor="6"><%= candidate.team %></td>
        <td id="cvScreenDate_<%= candidate.session.id %>"><%= candidate.cvScreenDate %></td>
        <td id="cvScreenResult_<%= candidate.session.id %>" data-editor="8"><%= candidate.cvScreenResult %></td>
        <td><%= candidate.id %></td>
        <td class="<%- (dateTimeCompleted != undefined) ? 'dateValue' : '' %>"><%- (dateTimeCompleted != undefined) ? dateTimeCompleted.toISOString() : '' %></td>
        <td><a href='<%- candidate.linkToCV %>' target='_blank'><!--FIXME: CV-->קו"ח</a></td>
        <td>
            <% if ((report) && (candidate.formCompleted)) { %>
            <% if (candidate.linkToReport !== undefined) { %>
            <a href='<%= candidate.linkToReport %>' target='_blank'><!--FIXME: Report-->דוח</a>
            <% }
            else { %>
            <a href='./recruiterReport?sid=<%- candidate.session.id %>' target='_blank'><!--FIXME: Report-->דוח</a>
            <% } %>
            <% } %>
        </td>
        <td><%- (report != undefined) ? report.finalScore : 'Not Done' %></td>
        <% if (advanced) { %>
            <td><%- appExp %></td>
            <td><%= candidate.formDurationInMinutes %></td>
            <td><a href='<%= candidate.linkToForm %>' target='_blank'><!--FIXME: Form-->שאלון</a></td>
            <td><a href='<%= candidate.linkToForm + ".info" %>' target='_blank'><!--FIXME: goo.gl-->goo.gl</a></td>
        <% } %>
        <td id="phoneInterviewDate_<%= candidate.session.id %>"><%= candidate.phoneInterviewDate %></td>
        <td id="phoneInterviewResult_<%= candidate.session.id %>"
            data-editor="3"><%= candidate.phoneInterviewResult %></td>
        <td id="interviewDate_<%= candidate.session.id %>"><%= candidate.interviewDate %></td>
        <td id="interviewResult_<%= candidate.session.id %>" data-editor="4"><%= candidate.interviewResult %></td>
        <td id="auditDate_<%= candidate.session.id %>"><%= candidate.auditDate %></td>
        <td id="auditResult_<%= candidate.session.id %>" data-editor="7"><%= candidate.auditResult %></td>
        <td id="hrResult_<%= candidate.session.id %>" data-editor="9"><%= candidate.hrResult %></td>
        <td id="refCallDate_<%= candidate.session.id %>"><%= candidate.refCallDate %></td>
        <td id="refCallResult_<%= candidate.session.id %>" data-editor="8"><%= candidate.refCallResult %></td>
        <td id="contractDate_<%= candidate.session.id %>"><%= candidate.contractDate %></td>
        <td id="reportRating_<%= candidate.session.id %>"><%= candidate.reportRating %></td>
        <td id="hired_<%= candidate.session.id %>" data-editor="2"><%= candidate.hired %></td>
        <td id="workDate_<%= candidate.session.id %>"><%= candidate.workDate %></td>
        <td id="processUpdate_<%= candidate.session.id %>" data-editor="10"><%= candidate.processUpdate %></td>
        <td id="startedWork_<%= candidate.session.id %>" data-editor="2"><%= candidate.startedWork %></td>
        <td id="recruiterNotes_<%= candidate.session.id %>" data-editor="1"><%= candidate.recruiterNotes %></td>
        <% if (advanced) { %>
        <td id="ehNotes_<%= candidate.session.id %>" data-editor="1"><%= candidate.ehNotes %></td>
        <% } %>
    </tr>
    <% } %>
    <% } %>
    </tbody>
</table>
</body>

<% include partials/footer %>
<!-- Include Bootstrap Table -->
<!--<script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.1/bootstrap-table.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.11.1/locale/bootstrap-table-zh-CN.min.js"></script>-->
<script src="/javascripts/bootstrap-table.min.js"></script>
<script src="/javascripts/bootstrap-table-locale-all.min.js"></script>
<script src="/javascripts/mindmup-editabletable.js"></script>
<script>
    // Sorting function for strings
    function textSorter(a, b) {
        if (a < b) return -1;
        if (a > b) return 1;
        return 0;
    }

    // Sorting function for dates
    function dateSorter(a, b) {
        if (b === '') return 1;
        if (a === '') return -1;
        const da = Date.parse(a);
        const db = Date.parse(b);
        if (da < db) return -1;
        if (da > db) return 1;
        return 0;
    }

    // Sorting function for numbers
    function numSorter(a, b) {
        a = parseFloat(a);
        b = parseFloat(b);
        if (a < b) return -1;
        if (a > b) return 1;
        return 0;
    }

    // Parse all elements of class "dateValue" and format them to correct date format
    let dateCells = document.getElementsByClassName("dateValue");
    for (let i = 0; i < dateCells.length; i++) {
        const dateStr = dateCells[i].innerText; // Date is expected to be parse-able (ISO format)
        const dateObj = new Date(dateStr);      // Create a date obj for convenience
        // Only way to format as we wish - all the toLocaleString etc. functions don't do the job well
        dateCells[i].innerText = dateObj.getFullYear() + '-' + ('0' + (1 + dateObj.getMonth())).slice(-2) +
            '-' + ('0' + dateObj.getDate()).slice(-2) + ' ' +
            ('0' + dateObj.getHours()).slice(-2) + ':' + ('0' + dateObj.getMinutes()).slice(-2);
    }

    // Add 'export to xlsx' button to table
    // Uses the tableexport.js lib
    // We do this before initing the bootstrap table because otherwise the export will only include the currently
    // viewed rows and not the entire table
    $("#candidates").tableExport({
        formats: ['xlsx'],  // Support only xlsx format
        bootstrap: true     // Use bootstrap for styling a nice flat button
    });
    // Initialize the candidates table as a bootstrap-table
    const candidatesTable = $('#candidates');
    candidatesTable.bootstrapTable({
        locale: 'he-IL', //FIXME: en-US
        pagination: true, // Multiple pages
        search: true, // Show search box (more like filtering...)
        paginationNextText: '<', //FIXME: Strangely enough this is for Hebrew (it's reversed)... for English I'm not sure
        paginationPreText: '>' //FIXME: Strangely enough this is for Hebrew (it's reversed)... for English I'm not sure
        <% if (!answers) { %>
        , onPostBody: function () {  // Event triggere after table is added to the DOM
            $('#candidates').editableTableWidget({ // Initialize the table as an editableTable
                editor:
                    [
                        $('<input>'), // The default editor will be an input
                        $('<textarea>'),  // 1 - text area
                        $('<select>' +
                            '<option></option>' +
                            '<option value="כן">כן</option>' +
                            '<option value="לא">לא</option>' +
                            '</select>'),  // 2 - select yes/no
                        $('<select>' +   // 3 - select phone interview
                            '<option></option>' +
                            '<option value="עבר">עבר</option>' +
                            '<option value="לא עבר">לא עבר</option>' +
                            '<option value="לא רלוונטי">לא רלוונטי</option>' +
                            '<option value="צריך לחשוב על זה">צריך לחשוב על זה</option>' +
                            '<option value="לא ענה">לא ענה</option>' +
                            '</select>'),
                        $('<select>' +   // 4 - select face-to-face interview
                            '<option></option>' +
                            '<option value="עבר">עבר</option>' +
                            '<option value="לא עבר">לא עבר</option>' +
                            '<option value="לא הגיע">לא הגיע</option>' +
                            '<option value="מעוניין לחשוב">מעוניין לחשוב</option>' +
                            '<option value="הסיר מועמדות">הסיר מועמדות</option>' +
                            '</select>'),
                        $('<select>' +
                            '<option></option>' +
                            '<option value="מועדונים">מועדונים</option>' +
                            '<option value="חיים ומשכנתאות מועדונים">חיים ומשכנתאות מועדונים</option>' +
                            '<option value="משכנתאות בנקים ותאונות אישיות">משכנתאות בנקים ותאונות אישיות</option>' +
                            '</select>'),  // 5 - dept
                        $('<select>' +
                            '<option></option>' +
                            '<option value="שרות לקוחות">שרות לקוחות</option>' +
                            '<option value="מכירות">מכירות</option>' +
                            '<option value="מכירות בריאות">מכירות בריאות</option>' +
                            '<option value="מכירות ריסק">מכירות ריסק</option>' +
                            '<option value="מכירות בנקים למשכנתאות">מכירות בנקים למשכנתאות</option>' +
                            '<option value="מכירות בנקים למשכנתאות">מכירות בנקים למשכנתאות</option>' +
                            '<option value="שרות בנקים למשכנתאות">שרות בנקים למשכנתאות</option>' +
                            '<option value="מכירות תאונות אישיות ואלה">מכירות תאונות אישיות ואלה</option>' +
                            '<option value="מכירות תאונות אישיות">מכירות תאונות אישיות</option>' +
                            '</select>'),  // 6 - team
                        $('<select>' +
                            '<option></option>' +
                            '<option value="עבר">עבר</option>' +
                            '<option value="לא עבר">לא עבר</option>' +
                            '<option value="שיחת קבט עבר">שיחת קבט עבר</option>' +
                            '<option value="שיחת קבט לא עבר">שיחת קבט לא עבר</option>' +
                            '<option value="לא הגיע">לא הגיע</option>' +
                            '<option value="הסיר מועמדות">הסיר מועמדות</option>' +
                            '</select>'),  // 7 - Honesty audit
                        $('<select>' +
                            '<option></option>' +
                            '<option value="עבר">עבר</option>' +
                            '<option value="לא עבר">לא עבר</option>' +
                            '</select>'),  // 8 - CV Screening + references call
                        $('<select>' +
                            '<option></option>' +
                            '<option value="עבר">עבר</option>' +
                            '<option value="לא עבר">לא עבר</option>' +
                            '<option value="לא הגיע">לא הגיע</option>' +
                            '<option value="הסיר מועמדות">הסיר מועמדות</option>' +
                            '</select>'),  // 9 - HR Interview
                        $('<select>' +
                            '<option></option>' +
                            '<option value="נשלח מייל למועמד">נשלח מייל למועמד</option>' +
                            '</select>')  // 10 - process status
                    ],
                // Set columns which aren't editable
                <% if (advanced) { %>
                preventColumns: [1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17],
                <% } else { %>
                preventColumns: [1, 2, 3, 4, 9, 10, 11, 12, 13]
                <% } %>
            });
        }
        <% } %>
    });


    // Method called when a cell value is changed
    candidatesTable.on('change', function (evt, newValue) {
        const cellId = evt.target.id;
        const cellIdParts = cellId.split('_');
        if (!cellIdParts[1]) {
            //something went wrong as the ID doesn't seem to have the right structure
            console.log("Invalid ID: ", cellId)
            return false; // Prevent the edit - at least the user will know something went wrong
        }
        // Create a PATCH request to update the db
        const sid = cellIdParts[1];
        const property = cellIdParts[0];
        let patchUrl = '/api/candidates/' + sid + '/' + property;
        let patchData = {value: newValue};
        // Send the result to the db
        sendUpdate(patchUrl, patchData);
        return true; // Accept the edit although we don't actually know if it went through with the server
        //FIXME: Perhaps we need to remember the previous value and revert to it if we are rejected by the server
    });

    function sendUpdate(patchUrl, patchData) {
        var request = {};
        request.url = patchUrl;
        request.data = patchData;
        $.ajax({
            url: patchUrl,
            data: JSON.stringify(patchData),
            type: 'PATCH',
            contentType: 'application/json',
            success: function (response) {
                console.log('Update successfully sent to server')
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log('Error: ', thrownError)
            }
        });
    }

</script>
